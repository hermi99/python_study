class PortModel(QAbstractTableModel):
    def __init__(self, datas, headers):
        super().__init__()
        self.datas = datas
        self.headers = headers

    def rowCount(self, parent=None, *args, **kwargs):
        return len(self.datas)

    def columnCount(self, parent=None, *args, **kwargs):
        return len(self.datas[0])

    def data(self, index, role=None):
        row = index.row()
        col = index.column()
        port_use = self.datas[row][3]

        if role == Qt.DisplayRole:
            return QVariant(self.datas[row][col])
        elif role == Qt.TextAlignmentRole:
            if col in [7, 9]:
                return Qt.AlignLeft + Qt.AlignVCenter
            else:
                return Qt.AlignHCenter + Qt.AlignVCenter
        elif role == Qt.BackgroundRole:
            if port_use == "Y":
                return QBrush(Qt.yellow)

        return QVariant()

    def headerData(self, col, orientation, role=None):
        if orientation == Qt.Horizontal and role == Qt.DisplayRole:
            return QVariant(self.headers[col])
        return QVariant()